@article{ 4plus1,
  author = {Philippe Kruchten},
  title = {The 4+1 View Model of Architecture},
  journal ={IEEE Software},
  volume = {12},
  number = {6},
  issn = {0740-7459},
  year = {1995},
  pages = {42-50},
  doi = {http://doi.ieeecomputersociety.org/10.1109/52.469759},
  publisher = {IEEE Computer Society},
  address = {Los Alamitos, CA, USA},
}

@INCOLLECTION{gqm,
  author = {Victor R. Basili and Gianluigi Caldiera and H. Dieter Rombach},
  title = {The Goal Question Metric Approach},
  booktitle = {Encyclopedia of Software Engineering},
  publisher = {Wiley},
  year = {1994}
}

@article{gqm84,
  author    = {Victor R. Basili and David M. Weiss},
  title     = {A Methodology for Collecting Valid Software Engineering Data},
  journal   = {IEEE Trans. Software Eng.},
  volume    = {10},
  number    = {6},
  year      = {1984},
  pages     = {728-738},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@book{docarc,
  author = {Clements, Paul and Garlan, David and Bass, Len and Stafford, Judith
    and Nord, Robert and Ivers, James and Little, Reed},
  title = {Documenting Software Architectures: Views and Beyond},
  year = {2002},
  isbn = {0201703726},
  publisher = {Pearson Education},
}

@book{ddd,
    abstract = {Domain-Driven Design Tackling Complexity in the Heart of Software. NM},
    author = {Evans, Eric},
    citeulike-article-id = {253734},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0321125215},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0321125215},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0321125215},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0321125215},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0321125215/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0321125215},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0321125215},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0321125215},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0321125215&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0321125215},
    day = {30},
    edition = {1. A.},
    howpublished = {Hardcover},
    isbn = {0321125215},
    keywords = {reference},
    month = {August},
    posted-at = {2009-09-22 12:25:01},
    priority = {2},
    publisher = {Addison-Wesley Professional},
    title = {Domain-Driven Design: Tackling Complexity in the Heart of Software},
    url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0321125215},
    year = {2003}
}


@Misc{slides1,
  author = {Wolf-Gideon Bleek},
  title = {Software Architecture Course - 1. Session - Introduction},
  howpublished      =   {lecture slides},
  year = 2009,
  Institution = {IT University, Copenhagen},
}

@Misc{slides2,
  author = {Wolf-Gideon Bleek},
  title = {Software Architecture Course - 2. Session - Theoretical Foundation},
  howpublished      =   {lecture slides},
  year = 2009,
  Institution = {IT University, Copenhagen},
}
@Misc{slides4,
  author = {Wolf-Gideon Bleek},
  title = {Software Architecture Course - 4. Session - Refactoring},
  howpublished      =   {lecture slides},
  year = 2009,
  Institution = {IT University, Copenhagen},
}




@phdthesis{carola,
    abstract = {In dieser Arbeit untersuche ich, wo Komplexit\"{a}t bei der Softwareentwicklung auftritt, und konzentriere mich auf Architekturkomplexit\"{a}t, die in der statischen Struktur von Softwaresystemen, der Softwarearchitektur, enthalten ist. In der Softwaretechnik existiert bereits ein umfassendes Repertoire an Architekturkonzepten und Architekturstilen, um die Komplexit\"{a}t von Softwarearchitekturen zu lindern. Trotzdem scheitern viele Projekte, und Entwicklungsteams beklagen sich dar\"{u}ber, dass ihr Softwaresystem nicht mehr wartbar und weiterentwickelbar ist. Um Architekturkomplexit\"{a}t greifbar zu machen, ziehe ich Grunds\"{a}tze aus der kognitiven Psychologie heran, die beschreiben, wie Menschen mit komplexen Strukturen umgehen. Dabei wird deutlich, wie objektorientierte Programmiersprachen und Architekturstile diese Grunds\"{a}tze ber\"{u}cksichtigen und wo L\"{u}cken zu erkennen sind. Auf dieser Grundlage habe ich vierundzwanzig Fallstudien an Softwaresystemen in Industrie und Wissenschaft durchgef\"{u}hrt. Bei zweiundzwanzig Fallstudien konnte ich die Softwaresysteme mit dem Analysewerkzeug Sotograph untersuchen und die Architektur mit dem jeweiligen Entwicklungsteam diskutieren. In einigen F\"{a}llen habe ich zus\"{a}tzlich ein Interview durchgef\"{u}hrt, um weitere Fragen zu kl\"{a}ren. Die Ergebnisse aus den Fallstudien zeigen das weite Spektrum der heute in Softwarearchitekturen vorhandenen Komplexit\"{a}t und lassen ihre Ursachen sichtbar werden. Dabei wird deutlich, dass der Architekturstil einen entscheidenden Einfluss auf die Komplexit\"{a}t einer Softwarearchitektur hat. Parallel zu den Fallstudien habe ich ein Modell f\"{u}r Architekturkomplexit\"{a}t entwickelt. Die drei Faktoren, auf die ich Architekturkomplexit\"{a}t zur\"{u}ckf\"{u}hre, sind: Mustertreue, Modularit\"{a}t und Geordnetheit. Aus diesen drei Faktoren leite ich Kriterien und Fragen ab. F\"{u}r sechs Fragen definiere ich Ma{\ss}e, die eine quantitative Auswertung erlauben. Anhand des Modells f\"{u}r Architekturkomplexit\"{a}t werden die Ergebnisse aus den Architekturanalysen und aus den Interviews pr\"{a}sentiert und interpretiert. Um die Ergebnisse konstruktiv nutzbar zu machen, stelle ich drei Stadien der architekturzentrierten Softwareentwicklung vor: Entwerfen, Erhalten und Erneuern von Architektur. Diese Stadien verlangen nach gut abgestimmten Strategien, wie Entwicklungsteams Architekturkomplexit\"{a}t reduzieren k\"{o}nnen. Schlie{\ss}lich biete ich einen Leitfaden daf\"{u}r an, wie die Strategien in den drei Stadien der architekturzentrierten Softwareentwicklung geplant und eingesetzt werden sollen, so dass Entwicklungsteams abh\"{a}ngig von ihrer Situation die passende Strategie ausw\"{a}hlen k\"{o}nnen.},
    author = {Lilienthal, Carola},
    citeulike-article-id = {4498318},
    day = {16},
    month = {July},
    posted-at = {2009-08-31 15:44:36},
    priority = {2},
    school = {Universit\"{a}t Hamburg},
    title = {Komplexit\"{a}t von Softwarearchitekturen, Stile und Strategien},
    year = {2008}
}

@book{booch,
 author = {Booch, Grady},
 title = {Object-Oriented Analysis and Design with Applications (3rd Edition)},
 year = {2004},
 isbn = {020189551X},
 publisher = {Addison Wesley Longman Publishing Co., Inc.},
 address = {Redwood City, CA, USA},
 }

@article{infhide,
    abstract = {This paper discusses modularization as a mechanism for improving the flexibility and comprehensibility of a system while allowing the shortening of its development time. The effectiveness of a ``modularization'' is dependent upon the criteria used in dividing the system into modules. A system design problem presented and both a conventional and unconventional decomposition are described. It is shown that the unconventional decompositions have distinct advantages for the goals outlined. The criteria used in arriving at the decompositions are discussed. The unconventional decomposition, if implemented with the conventional assumption that a module consists of one or more subroutines, will be less efficient in most cases. An alternative approach to implementation which does not this effect is sketched.},
    author = {Parnas, D. L.},
    citeulike-article-id = {970548},
    journal = {Communications of the ACM},
    keywords = {bibtex-import, comprehensibility, computer, criteria, decomposition, engineering, flexibility, modularization, modules, programming, software, systems},
    month = {December},
    number = {12},
    pages = {1053--1058},
    posted-at = {2006-12-01 16:12:35},
    priority = {0},
    title = {On the Criteria to Be Used in Decomposing Systems into Modules},
    volume = {15},
    year = {1972}
}

@book{artarc,
  author = {Albin, Stephen},
  title = {The  Art of Software Architecture: Design Methods and Techniques},
  year = {2003},
  isbn = {0471228869},
  publisher = {John Wiley \& Sons, Inc.},
  address = {New York, NY, USA},
}

@misc{ndepend,
  url = {http://www.ndepend.com/Metrics.aspx#RelationalCohesion},
  title={Metrics Definitions},
  author={NDepend},
}

@article{mcc,
  author = {McCabe, T. J.},
  title = {A Complexity Measure},
  journal = {IEEE Trans. Softw. Eng.},
  volume = {2},
  number = {4},
  year = {1976},
  issn = {0098-5589},
  pages = {308--320},
  doi = {http://dx.doi.org/10.1109/TSE.1976.233837},
  publisher = {IEEE Press},
  address = {Piscataway, NJ, USA},
}

